<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logInButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        6gAAAOoB+Ss1JgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAGcSURBVFhH7dc7
        LwRRGMbxCSpxa9ChoVDREBJRiUaiFxoavgCVW6LQoNaIb0ApRCXBqoSo3aITl9CI6/+d5E0m68ycObNn
        icST/IqZnHnnyczuzmyQIi1Yxw3e8ZnBA3YxCKf04xmmoVmtIFXq8QjTkEINw5pZ6AGX6EEZsqQBG9B5
        p7BmC3pAqsaWVOIFOrMKiTmELu6UHR5yAZ3ZJDuSUowC5/g7BXagi1tlh4c4FeiClFgIt8yZxjGGwi17
        nArYUgEdJr+QY7DFawHJHlxKeC9QjRx06AcmEBfvBSQuJRILtGMSUxks4g06PO52xBYoh+8HzysaEc2P
        F5CHUDSJt6AN85DL6WoVcu91uNyCUeSnKB/CGuR/CMdhivcCcvIjpDm5xGuBUuxDB8Zd9micCpSgG7Xh
        1vfUweXkEqcCy5CFt5BLbcoczlCUh9EBdHGH7PAQpwL/b0S//lIafS0fkR0Fxvm1fAa6+Aq9yPrHRB5K
        m9B5J7BGvuf30IN8Svu1DfrwBNOQrJbglGas4Rryi2caanOHbQwgkiD4Aof0V2ptF5b7AAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>