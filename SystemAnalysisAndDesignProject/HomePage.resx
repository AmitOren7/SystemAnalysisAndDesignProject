<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logInButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAOsAAADrASts18IAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAABnElEQVRYR+3XOy8EURjG8QkqcWvQoaFQ0RASUYlGohcaGr4AlVui0KDWiG9AKUQlwaqEqN2iE5fQ
        iOv/neRNJuvMnDmzZ4nEk/yKmZx558nM7s5skCItWMcN3vGZwQN2MQin9OMZpqFZrSBV6vEI05BCDcOa
        WegBl+hBGbKkARvQeaewZgt6QKrGllTiBTqzCok5hC7ulB0ecgGd2SQ7klKMAuf4OwV2oItbZYeHOBXo
        gpRYCLfMmcYxhsIte5wK2FIBHSa/kGOwxWsByR5cSngvUI0cdOgHJhAX7wUkLiUSC7RjElMZLOINOjzu
        dsQWKIfvB88rGhHNjxeQh1A0ibegDfOQy+lqFXLvdbjcglHkpygfwhrkfwjHYYr3AnLyI6Q5ucRrgVLs
        QwfGXfZonAqUoBu14db31MHl5BKnAsuQhbeQS23KHM5QlIfRAXRxh+zwEKcC/29Ev/5SGn0tH5EdBcb5
        tXwGuvgKvcj6x0QeSpvQeSewRr7n99CDfEr7tQ368ATTkKyW4JRmrOEa8otnGmpzh20MIJIg+AKH9Fdq
        bReW+wAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>